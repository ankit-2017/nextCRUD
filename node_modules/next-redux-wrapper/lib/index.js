"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _react = _interopRequireWildcard(require("react"));

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var _debug = false;
var DEFAULT_KEY = '__NEXT_REDUX_STORE__';
var isServer = typeof window === 'undefined';
/**
 * @param makeStore
 * @param initialState
 * @param config
 * @param ctx
 * @return {{getState: function, dispatch: function}}
 */

var initStore = function initStore(_ref) {
  var makeStore = _ref.makeStore,
      initialState = _ref.initialState,
      config = _ref.config,
      _ref$ctx = _ref.ctx,
      ctx = _ref$ctx === void 0 ? {} : _ref$ctx;
  var storeKey = config.storeKey;

  var createStore = function createStore() {
    return makeStore(config.deserializeState(initialState), _objectSpread({}, ctx, config, {
      isServer: isServer
    }));
  };

  if (isServer) return createStore(); // Memoize store if client

  if (!window[storeKey]) {
    window[storeKey] = createStore();
  }

  return window[storeKey];
};
/**
 * @param makeStore
 * @param config
 * @return {function(App): {getInitialProps, new(): WrappedApp, prototype: WrappedApp}}
 */


var _default = function _default(makeStore) {
  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  config = _objectSpread({
    storeKey: DEFAULT_KEY,
    debug: _debug,
    serializeState: function serializeState(state) {
      return state;
    },
    deserializeState: function deserializeState(state) {
      return state;
    }
  }, config);
  return function (App) {
    var _class, _temp;

    return _temp = _class =
    /*#__PURE__*/
    function (_Component) {
      _inherits(WrappedApp, _Component);

      function WrappedApp(props, context) {
        var _this;

        _classCallCheck(this, WrappedApp);

        _this = _possibleConstructorReturn(this, _getPrototypeOf(WrappedApp).call(this, props, context));
        var initialState = props.initialState;
        if (config.debug) console.log('4. WrappedApp.render created new store with initialState', initialState);
        _this.store = initStore({
          makeStore: makeStore,
          initialState: initialState,
          config: config
        });
        return _this;
      }

      _createClass(WrappedApp, [{
        key: "render",
        value: function render() {
          var _this$props = this.props,
              initialProps = _this$props.initialProps,
              initialState = _this$props.initialState,
              props = _objectWithoutProperties(_this$props, ["initialProps", "initialState"]); // Cmp render must return something like <Provider><Component/></Provider>


          return _react.default.createElement(App, _extends({}, props, initialProps, {
            store: this.store
          }));
        }
      }]);

      return WrappedApp;
    }(_react.Component), _defineProperty(_class, "displayName", "withRedux(".concat(App.displayName || App.name || 'App', ")")), _defineProperty(_class, "getInitialProps",
    /*#__PURE__*/
    function () {
      var _ref2 = _asyncToGenerator(
      /*#__PURE__*/
      _regenerator.default.mark(function _callee(appCtx) {
        var store, initialProps;
        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (appCtx) {
                  _context.next = 2;
                  break;
                }

                throw new Error('No app context');

              case 2:
                if (appCtx.ctx) {
                  _context.next = 4;
                  break;
                }

                throw new Error('No page context');

              case 4:
                store = initStore({
                  makeStore: makeStore,
                  config: config,
                  ctx: appCtx.ctx
                });
                if (config.debug) console.log('1. WrappedApp.getInitialProps wrapper got the store with state', store.getState());
                appCtx.ctx.store = store;
                appCtx.ctx.isServer = isServer;
                initialProps = {};

                if (!('getInitialProps' in App)) {
                  _context.next = 13;
                  break;
                }

                _context.next = 12;
                return App.getInitialProps.call(App, appCtx);

              case 12:
                initialProps = _context.sent;

              case 13:
                if (config.debug) console.log('3. WrappedApp.getInitialProps has store state', store.getState());
                return _context.abrupt("return", {
                  isServer: isServer,
                  initialState: config.serializeState(store.getState()),
                  initialProps: initialProps
                });

              case 15:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      return function (_x) {
        return _ref2.apply(this, arguments);
      };
    }()), _temp;
  };
};

exports.default = _default;
//# sourceMappingURL=index.js.map