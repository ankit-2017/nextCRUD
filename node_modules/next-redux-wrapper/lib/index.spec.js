"use strict";

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _react = _interopRequireDefault(require("react"));

var _redux = require("redux");

var _reduxPromiseMiddleware = _interopRequireDefault(require("redux-promise-middleware"));

var _reactTestRenderer = _interopRequireDefault(require("react-test-renderer"));

var _index = _interopRequireDefault(require("./index"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var appCtx = {
  ctx: {}
};

var reducer = function reducer() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
    reduxStatus: 'init'
  };
  var action = arguments.length > 1 ? arguments[1] : undefined;

  switch (action.type) {
    case 'FOO': // sync

    case 'FOO_FULFILLED':
      // async
      return {
        reduxStatus: action.payload
      };

    default:
      return state;
  }
};

var makeStore = function makeStore(initialState) {
  return (0, _redux.createStore)(reducer, initialState, (0, _redux.applyMiddleware)((0, _reduxPromiseMiddleware.default)()));
};

var SyncPage =
/*#__PURE__*/
function (_React$Component) {
  _inherits(SyncPage, _React$Component);

  function SyncPage() {
    _classCallCheck(this, SyncPage);

    return _possibleConstructorReturn(this, _getPrototypeOf(SyncPage).apply(this, arguments));
  }

  _createClass(SyncPage, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          store = _this$props.store,
          props = _objectWithoutProperties(_this$props, ["store"]);

      return _react.default.createElement("div", null, JSON.stringify(props), JSON.stringify(store.getState()));
    }
  }], [{
    key: "getInitialProps",
    value: function getInitialProps(_ref) {
      var ctx = _ref.ctx;
      ctx.store.dispatch({
        type: 'FOO',
        payload: 'foo'
      });
      return {
        custom: 'custom'
      };
    }
  }]);

  return SyncPage;
}(_react.default.Component);

var someAsyncAction = {
  type: 'FOO',
  payload: new Promise(function (res) {
    return res('foo');
  })
};

var AsyncPage =
/*#__PURE__*/
function (_SyncPage) {
  _inherits(AsyncPage, _SyncPage);

  function AsyncPage() {
    _classCallCheck(this, AsyncPage);

    return _possibleConstructorReturn(this, _getPrototypeOf(AsyncPage).apply(this, arguments));
  }

  _createClass(AsyncPage, null, [{
    key: "getInitialProps",
    value: function () {
      var _getInitialProps = _asyncToGenerator(
      /*#__PURE__*/
      _regenerator.default.mark(function _callee(_ref2) {
        var ctx;
        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                ctx = _ref2.ctx;
                _context.next = 3;
                return ctx.store.dispatch(someAsyncAction);

              case 3:
                return _context.abrupt("return", {
                  custom: 'custom'
                });

              case 4:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function getInitialProps(_x) {
        return _getInitialProps.apply(this, arguments);
      }

      return getInitialProps;
    }()
  }]);

  return AsyncPage;
}(SyncPage);

function verifyComponent(_x2) {
  return _verifyComponent.apply(this, arguments);
}

function _verifyComponent() {
  _verifyComponent = _asyncToGenerator(
  /*#__PURE__*/
  _regenerator.default.mark(function _callee5(WrappedPage) {
    var props, component, tree;
    return _regenerator.default.wrap(function _callee5$(_context5) {
      while (1) {
        switch (_context5.prev = _context5.next) {
          case 0:
            _context5.next = 2;
            return WrappedPage.getInitialProps(appCtx);

          case 2:
            props = _context5.sent;
            expect(props.initialProps.custom).toBe('custom');
            expect(props.initialState.reduxStatus).toBe('foo'); // this is called by Next.js

            component = _reactTestRenderer.default.create(_react.default.createElement(WrappedPage, props));
            tree = component.toJSON();
            expect(tree).toMatchSnapshot();

          case 8:
          case "end":
            return _context5.stop();
        }
      }
    }, _callee5, this);
  }));
  return _verifyComponent.apply(this, arguments);
}

test('simple store integration',
/*#__PURE__*/
_asyncToGenerator(
/*#__PURE__*/
_regenerator.default.mark(function _callee2() {
  var WrappedPage;
  return _regenerator.default.wrap(function _callee2$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          WrappedPage = (0, _index.default)(makeStore)(SyncPage);
          _context2.next = 3;
          return verifyComponent(WrappedPage);

        case 3:
        case "end":
          return _context2.stop();
      }
    }
  }, _callee2, this);
})));
test('async store integration',
/*#__PURE__*/
_asyncToGenerator(
/*#__PURE__*/
_regenerator.default.mark(function _callee3() {
  var WrappedPage;
  return _regenerator.default.wrap(function _callee3$(_context3) {
    while (1) {
      switch (_context3.prev = _context3.next) {
        case 0:
          WrappedPage = (0, _index.default)(makeStore)(AsyncPage);
          _context3.next = 3;
          return verifyComponent(WrappedPage);

        case 3:
        case "end":
          return _context3.stop();
      }
    }
  }, _callee3, this);
})));
describe('custom serialization', function () {
  test('custom state serialization on the server and deserialization on the client',
  /*#__PURE__*/
  _asyncToGenerator(
  /*#__PURE__*/
  _regenerator.default.mark(function _callee4() {
    var MyApp, WrappedPage, props, component, tree;
    return _regenerator.default.wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            MyApp =
            /*#__PURE__*/
            function (_React$Component2) {
              _inherits(MyApp, _React$Component2);

              function MyApp() {
                _classCallCheck(this, MyApp);

                return _possibleConstructorReturn(this, _getPrototypeOf(MyApp).apply(this, arguments));
              }

              _createClass(MyApp, [{
                key: "render",
                value: function render() {
                  var store = this.props.store;
                  return _react.default.createElement("div", null, JSON.stringify(store.getState()));
                }
              }]);

              return MyApp;
            }(_react.default.Component);

            WrappedPage = (0, _index.default)(makeStore, {
              serializeState: function serializeState(state) {
                return _objectSpread({}, state, {
                  serialized: true
                });
              },
              deserializeState: function deserializeState(state) {
                return _objectSpread({}, state, {
                  deserialized: true
                });
              }
            })(MyApp);
            _context4.next = 4;
            return WrappedPage.getInitialProps(appCtx);

          case 4:
            props = _context4.sent;
            expect(props.initialState.serialized).toBeTruthy(); // emulate client case

            delete props.store; // this is called by Next.js

            component = _reactTestRenderer.default.create(_react.default.createElement(WrappedPage, props));
            tree = component.toJSON();
            expect(tree).toMatchSnapshot();

          case 10:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4, this);
  })));
});
//# sourceMappingURL=index.spec.js.map